<h1>★虎尾科技大學★</h1>
<p>★幫學校打一下廣告★                    <span>★</span>虎尾科技大學 五專部<span>★</span></p>
<p><img caption="false" height="600" src="/images/1525766916_2080.jpg" width="647"/></p><h1>ROC Flag</h1>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(250, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(280, 200, 180)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(100, 50, 50)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p>flaskapp.py檔案進行修改，國旗才可顯示出來</p>
<p><strong><span>def savePage() 的修改</span></strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">def savePage():
    """save all pages function"""
    page_content = request.form['page_content']
    # when element_format : "html", need to remove the annoying comment to prevent brython exec
    page_content = [w.replace('// &lt;![CDATA[', '') for w in page_content]
    page_content = [w.replace('// ]]&gt;', '') for w in page_content]
    # check if administrator
......</pre>
<p><strong><span>def ssavePage() 的修改</span></strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">def ssavePage():
    """seperate save page function"""
    page_content = request.form['page_content']
    # when element_format : "html", need to remove the annoying comment to prevent brython exec
    page_content = page_content.replace('// &lt;![CDATA[', '')
    page_content = page_content.replace('// ]]&gt;', '')
    page_order = request.form['page_order']
    if not isAdmin():
......</pre>
<p><br/><br/></p>
<p>上述程式原始碼:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script src="./../static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;canvas height="400" id="plotarea" width="600"&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
# 導入 doc
from browser import document as doc
import math
 
# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
// ]]&gt;&lt;/script&gt;</pre>
<p></p><h1>Game</h1><h2>糞Game(一)</h2>
<p></p>
<script type="text/javascript">
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
</script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form>
<p><span>上述程式原始碼:</span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">123&lt;script type="text/javascript"&gt;// &lt;![CDATA[
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
          
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;canvas height="300" id="canvas" width="400"&gt; Your browser doesn't support the HTML5 element canvas. &lt;/canvas&gt; &lt;br&gt; &lt;button onclick="throwdice();"&gt;Throw dice &lt;/button&gt;&lt;/p&gt;
&lt;form id="f" name="f"&gt;Stage: &lt;input name="stage" type="text" value="First Throw"&gt; Point: &lt;input name="pv" type="text" value="   "&gt; Outcome: &lt;input name="outcome" type="text" value="     "&gt;&lt;/form&gt;
</pre>
<p><br/><br/></p><h2>糞Game(二)</h2>
<p><button onclick="myFunction()">核彈按鈕</button></p>
<p id="demo"></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
</script>
<p>上述程式原始碼:</p>
<script>
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
 
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
 
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
 
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
</script>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;button onclick="myFunction()"&gt;Try it&lt;/button&gt;&lt;/p&gt;
&lt;p id="demo"&gt;&lt;/p&gt;
&lt;script&gt;// &lt;![CDATA[
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
// ]]&gt;&lt;/script&gt;
</pre>
<p><br/><br/></p><h2>糞Game(三)</h2>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas></p>
<script>
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
  
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
  
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
  
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
</script>
<p><button onclick="draw()">繪圖</button> <button onclick="clear_canvas()">清除</button></p>
<p></p>
<p>上述程式原始碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;canvas height="300" id="canvas" width="400"&gt; Your browser doesn't support the HTML5 element canvas. &lt;/canvas&gt;&lt;/p&gt;
&lt;script&gt;
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
  
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
  
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
  
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
&lt;/script&gt;
&lt;p&gt;&lt;button onclick="draw()"&gt;繪圖&lt;/button&gt; &lt;button onclick="clear_canvas()"&gt;清除&lt;/button&gt;&lt;/p&gt;</pre>
<p></p><h1>倉儲改版指令</h1>
<p><span>指令解釋</span><br/><br/><span style="color: #ff0000;"><strong>git add</strong></span><br/><span> 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.</span><br/><span>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:</span><br/><br/><br/><span style="color: #ff0000;"><strong>git commit -"改版說明訊息"</strong></span><br/><span> 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.</span><br/><span>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.</span><br/><br/><span style="color: #ff0000;"><strong>git push</strong></span><br/><span> 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. </span><br/><br/></p><h1>Proxy連線</h1>
<p>第一步:到任意網站(範例:Chrome)選取右上角管理--&gt;設定</p>
<p><img alt="" height="621" src="/images/17tWgmAhdy.png" width="369"/></p>
<p><img alt="" height="486" src="https://50733118.github.io/2019wcmj/images/p2.png" width="397"/></p>
<p>第二步:進階--&gt;系統-開啟Proxy設定</p>
<p><img alt="" height="345" src="https://50733118.github.io/2019wcmj/images/p3.png" width="698"/></p>
<p><img alt="" height="220" src="https://50733118.github.io/2019wcmj/images/p4.png" width="720"/></p>
<p>第三步:連線--&gt;LAN設定</p>
<p><img alt="" height="610" src="https://50733118.github.io/2019wcmj/images/p5.png" width="477"/></p>
<p>第四步:把Proxy位址改學校IP:140.130.17.3</p>
<p>學校連接<span>埠:3128</span></p>
<p><img caption="false" height="386" src="https://50733118.github.io/2019wcmj/images/p6.png" width="443"/></p>
<p>設定完成即可</p>
<p><br/><br/><br/><br/><strong><span></span></strong></p><h1>配置可攜程式環境</h1>
<p><span>取得 Windows 10 64 位元環境下的可攜程式環境 (下載  2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.</span><br/><br/><span>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統,<span> </span><strong>隨身碟必須在關閉所有應用程式執行下, 才可正常退出.</strong></span><br/><br/><span>了解基本的 DOS (Disk Operating System) 指令</span><br/><br/><span>C:\&gt; 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為</span><span>Y:\&gt;</span><br/><br/><span>若要<strong>更換目錄</strong>, 則使用<strong><span> </span>cd</strong>,例如:<strong> </strong></span><strong>Y:\&gt;cd tmp</strong><br/><br/><span>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 </span><span>Y:\tmp&gt;</span><br/><br/><span>若要再回到 Y 槽的根目錄, 可以使用 cd ..</span><br/><br/><span>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.</span><br/><br/><span>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \</span><br/><br/><span>直接回到根目錄.</span><br/><br/><span>或者從<strong><span> </span>Y:\&gt; 直接使用</strong></span><br/><br/><strong>cd \tmp\repo\ssh\wcm2019</strong><br/><br/><span>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;</span><br/><br/><span>此外, 常用的 DOS 指令有:</span><br/><br/><span><strong>dir</strong><span> </span>- 列出目前所在目錄的內容</span><br/><br/><span><strong>mkdir</strong> - 隨後加上要建立目錄的名稱, 可以建立目錄</span></p>
<p><span><strong>cls</strong> -清除目前的命令列顯示的內容</span></p>
<h1>SSL-VPN服務</h1>
<p><span><strong>1. 首次使用須先安裝SSL VPN 程式(Juniper Networks Connect)</strong></span></p>
<p><span>(1)請依您的作業系統版本下載使用者端程式：<a href="https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY">連結</a></span></p>
<p><span>(2)程式下載完成後，點擊兩下開始安裝。</span><br/><span>   <img alt=" archive 3629 d5014af5" src="https://nfucc.nfu.edu.tw/images/image/-archive-3629_d5014af5.png"/></span></p>
<p><span>   </span></p>
<hr size="2" width="100%"/>
<div><span><strong>2. </strong><strong>進行身份驗證(可由Juniper Network Connect或IE，請擇一進行身分認證)</strong></span></div>
<div><span></span></div>
<div><span>2-1: Juniper Network Connect 應用程式認證</span></div>
<blockquote>
<div>
<p><span>1."點選搜尋" &gt; 輸入程式名稱為Network Connect&gt; 點擊Network Connect</span></p>
<p><span><img alt="5" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/5.jpg"/></span></p>
<p><span>2.執行程式後，於"登入頁面"輸入網址 :<span> </span><a href="https://sslvpn.nfu.edu.tw/nfu">https://sslvpn9.twaren.net/nfu</a><span> </span>，後按下"執行"</span></p>
<p><span><img alt="1" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/1.jpg"/></span></p>
<p><span>3.輸入使用者帳號密碼，請填入校務行政AD帳號及密碼。請完整填寫您在校務行政AD帳號以及密碼，否則國網中心找不到對象進行身份確認<span> </span></span><br/><span>！(例: 員工編號或學號@ctx10.nfu.edu.tw）</span></p>
<p><img alt="1" height="430" src="https://nfucc.nfu.edu.tw/images/1.PNG" width="472"/></p>
<p>(以下為舊版本的登入畫面)</p>
<p><span><img alt="2" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/2.jpg"/></span></p>
<p></p>
<p><span>4.出現"設定控制-警告"視窗，按下"是"</span></p>
<p><span><img alt="3" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/3.jpg"/></span></p>
</div>
</blockquote>
<div>
<p><span>             5.螢幕右下角顯示"已連接"，表示已成功連線。</span></p>
<p><span>             <img alt="4" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/4.jpg"/></span></p>
</div>
<div><span></span></div>
<div><span>2-2: IE網認證</span></div>
<blockquote>
<div><span>1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行"</span></div>
<div><span>登入頁面請輸入： <a href="https://sslvpn9.twaren.net/nfu">https://sslvpn9.twaren.net/nfu</a>，按下「執行」，會出現帳號與密碼登入欄位。</span><br/><span>請填入虎尾科技大學的校務行政AD帳號及密碼，並請輸入下方驗證碼，進行身份確認。</span><br/><span><span><span>請完整填寫您在虎尾科技大學的校務行政AD帳號以及密碼</span></span>，否則國網中心找不到對象進行身份確認！</span></div>
<div><span>(例:<span><span> 員工編號或學號@ctx10.nfu.edu.tw</span></span>）</span><br/><span>填寫完畢以後按下Login登入就會開始進行身份確認，請稍後一段時間。</span></div>
<div><span></span></div>
<div><span><img alt="1" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/1.jpg"/></span></div>
<div><span></span></div>
<div><span><img alt="2" height="493" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/2.JPG" width="800"/></span></div>
<div><span></span></div>
<div><span>2.點選「開始」 </span></div>
<div><span><img alt="3" height="493" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/3.jpg" width="800"/></span></div>
<div><span>3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。</span></div>
<div>
<p><span><img alt="5" height="493" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/5.jpg" width="800"/></span></p>
</div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong> </strong></span></div>
<blockquote>
<div><span> <strong>5. </strong><strong>VPN</strong><strong>連線建立完成</strong></span></div>
</blockquote>
<blockquote><span>連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。<span>(註:指派IP:一定為120.113.100.XX)</span>。</span><br/><span>到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。</span>
<div><span><img alt="153.png" src="https://nfucc.nfu.edu.tw/images/153.png"/></span></div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong>6. </strong><strong>連線IP檢視</strong>(*)</span></div>
<blockquote>
<div><span>如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如 <a href="http://showip.net/" target="_blank" title="Show IP"><span>http://showip.net/</span></a></span></div>
<div><span><img alt="15313.png" src="https://nfucc.nfu.edu.tw/images/15313.png"/></span></div>
</blockquote>
<h1>VirtualBox</h1>
<p>1.建立 Ubuntu 18.04 虛擬主機</p>
<p><span><img caption="false" height="600" src="/images/6.png" width="735"/></span></p>
<p><span><img caption="false" height="600" src="/images/5.png" width="736"/></span></p>
<p><span><img caption="false" height="600" src="/images/4.png" width="527"/></span></p>
<p><span><img caption="false" height="600" src="/images/3.png" width="588"/></span></p>
<p><span><img caption="false" height="600" src="/images/2.png" width="588"/></span></p>
<p><span><img caption="false" height="600" src="/images/1.png" width="893"/></span></p>
<p><span>2.以 </span><span></span><span>ifconfig 查 Ubuntu 伺服器的 IP</span><br/><span></span></p>
<p><img caption="false" height="600" src="/images/VEt2MVSavb.png" width="1065"/></p>
<p>3.以 sudo apt install nginx 安裝 nginx WWW 伺服器</p>
<p><span><img caption="false" height="600" src="/images/VEt2MVSavb.png" width="1068"/></span></p>
<p>4.以 Windows 10  下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu</p>
<p><span><img caption="false" height="600" src="/images/vjiAep71KW.png" width="1067"/></span></p>
<p><span>5.傳輸完成重新開機查詢IP</span></p>
<p><span><img caption="false" height="600" src="/images/f1WjZpkICo.png" width="1068"/></span></p>
<p>6.在瀏覽器輸入    <a href="http://127.0.0.1"><span style="color: #0000ff;">http://</span> </a>    IP  為虛擬主機開啟的<span style="color: #0000ff;">靜態網站</span></p>
<p><span><img caption="false" height="600" src="/images/chrome_gwu0NebDlv.png" width="1066"/></span></p>
<p><span>7.</span>在瀏覽器輸入   <span> </span><a href="http://%20/"><span style="color: #0000ff;">https://</span> </a>    IP  為虛擬主機開啟的<span style="color: #0000ff;">動態網站</span></p>
<p><span><img alt="" height="600" src="/images/chrome_VLZxyfaZtZ.png" width="1117"/></span></p>
<p><span> </span></p>
<p><span>8.在瀏覽器輸入    <a href="http://%20/"><span style="color: #0000ff;">https://</span> </a>    IP <span style="color: #0000ff;">:5443</span> 為虛擬主機開啟的<span style="color: #0000ff;">fossil網站</span></span></p>
<p><span style="color: #000000;"></span></p>
<p><img alt="" height="600" src="/images/eMODuO6hTv.png" width="1116"/></p>
<p><span></span></p><h1>期中影片</h1>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="644" src="https://www.youtube.com/embed/SH0WxVi9Agk" width="1189"></iframe></p>
<h1>week_4</h1>
<p><span>本週課程在說明如何利用 </span><a href="https://pages.github.com/">Github Pages</a><span><span> </span>與<span> </span></span><a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a><span>, 建立個人的靜態網際內容管理系統.</span></p>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span><br/><span>Demo 網站:<span> </span></span><a href="https://mdecourse.github.io/2019wcmj">https://mdecourse.github.io/2019wcmj</a><br/><br/><span>此處所謂的靜態網際內容管理指<span> </span></span><a href="https://pages.github.com/">Github Pages</a><span><span> </span>目前只允許伺服倉儲中特定分支的特定目錄中的超文件, 亦即<span> </span></span><a href="https://en.wikipedia.org/wiki/HTML">Html</a><span><span> </span>檔案與<span> </span></span><a href="https://en.wikipedia.org/wiki/JavaScript">Javascript</a><span><span> </span>程式檔案, 而 CMSimfly 的靜態網頁就是利用 Python 程式, 設法將原本的動態網站系統的內容轉為超文件與 Javascript 後, 單獨儲存在 content 目錄下, 然後透過倉儲根目錄中的 index.html 進行跳轉至 content/index.html, 但是 CMSimfly 倉儲中仍然保留所有動態系統的 Python 程式與設定, 可上傳至其他支援執行 Python 的網際應用伺服器 (例如:<span> </span></span><a href="https://www.heroku.com/">Heroku</a><span>), 並以動態的網站格式型態, 讓管理者登入進行內容管理.</span><br/><br/><span>之後, 我們將以 Github 倉儲中的資料版本為主, 設法在各用戶的近端可攜環境中進行版本管理, 然後再同步到<span> </span></span><a href="https://www.heroku.com/">Heroku</a><span><span> </span>動態網站, 或其他自架的網站.</span></p>
<p><span>以下為與本週課程有關的操作說明影片.</span></p>
<h2>建立 Windows 10 64 位元可攜程式套件</h2>
<p><span><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0jqiC_rFDnc" width="560"></iframe><span><span> </span></span></span></p>
<h2>建立 Github 倉儲</h2>
<p><span><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lPJGzHdpIOw" width="560"></iframe><span><span> </span></span></span></p>
<h2>啟用倉儲的 Github Pages 與 CMSimfly</h2>
<p><span><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RFVWE1i4Cew" width="560"></iframe></span></p>
<h2>使用 SSH 執行 Git clone 與 push</h2>
<p><span><span>在 Windows 10 環境下使用可攜系統的優點是使用者可以隨身攜帶程式開發環境外, 還能將工作中的倉儲與認證用資料隨身, 以便在任何時間進行近端或遠端資料維護.</span><br/><br/><span>以下操作因僅用於課程教學使用, 所建立的認證用 Private Key 並未使用密碼保護, 其他非教學情境下, 建議一定要多加一組密碼保護認證用 Private Key, 一旦隨身碟遺失後, 無需擔心重要資料被竄改.</span><br/><br/><span>未採用密碼保護的 Private Key, 若隨身碟遺失, 則需即刻重新設定 Github 帳號中所使用的 SSH Public Key.</span><br/><br/><span>關閉操作系統儲存 Github 帳號密碼設定</span><br/><br/><span>目前 KMOL 所使用的 PortableGIT, 內建設定的 credential helper 為 manger, 表示當使用者使用 git push 時內建會跳出讓使用者輸入帳號密碼的對話視窗, 一旦使用者輸入帳號密碼後, 該資料將會儲存於操作系統中, 即便使用者選擇取消, 以手動輸入帳號密碼, 操作系統的 credential manager 依然會保存此一私密資料.</span><br/><br/><span>使用</span><br/><br/><br/><span>git config --edit --system</span><br/><br/><br/><span>可以帶出 vi 編輯器, 編輯 git 指令所使用的系統設定, 只要將 credential 項目中的 helper = manager 刪除後儲存, 即可關閉內定將使用者 Github 帳號密碼儲存於操作系統的問題.</span></span></p>
<h2>建立 OpenSSH 格式的 Private 與 Public Keys</h2>
<p><span><span>接下來, 在可攜系統的命令列視窗中, 以 sh 執行 Git 的 shell, 使用</span><br/><br/><br/><span>ssh-keygen -t rsa -b 4096 -C "This is my key"</span><br/><br/><span>建立位於 y:\home\.ssh\id_rsa 的 Private Key 與位於 y:\home\.ssh\id_rsa.pub 的 Public Key, 並且將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區.</span><br/><br/><br/><span>使用 ssh 協定執行 git clone</span><br/><br/><br/><span>為了採用 OpenSSH 協定執行登入認證, 使用者在近端 git clone 倉儲時, 必須使用類似 git@github.com:帳號/倉儲.git 的連線 URL</span><br/><br/><br/><span>例如:<span> </span></span><br/><br/><br/><span>要將<span> </span></span><a href="https://github.com/mdecourse/wcm2019">https://github.com/mdecourse/wcm2019</a><span><span> </span>的倉儲, 以 ssh 協定 git clone 到近端時, 必須使用:</span><br/><br/><br/><span>git clone git@github.com:mdecourse/wcm2019.git</span><br/><br/><br/><span>建立位於 wcm2019 的倉儲目錄, 而 git add ., git commit -m 與 git push 的指令則與採 http 連線時的指令相同. 只是採用 ssh 連線下的 git push, git 會讀取位於 y:\home\.ssh\id_rsa Private Key 與 Github 帳號上所設定的 Public Key 進行比對, 若同為一個 pair, 則通過認證, 可將改版的資料推送到遠端倉儲中.</span><br/><br/><br/><span>上述 ssh 協定下的 git clone 與 git push, 配合 ungit 使用時, 可以直接輸入提交訊息後, 以 commit &amp; push 將近端版本提交推送到遠端.</span><br/><br/><br/><span>ssh 連線透過 proxy server, 必須設定 y:\home\.ssh\config 如下:</span><br/></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.kmol.info:3128 %h %p
 
# for user1
# url = git@github.com_user1:user1/cmstest.git
Host github.com_user1
    User git
    Port 22
    Hostname github.com
 
    IdentityFile "y:\home\.ssh\id_rsa_user1"
 
    TCPKeepAlive yes
    IdentitiesOnly yes
     
# for user2
# url = git@github.com_user2:user2/user2.com.git
Host github.com_user2
    Port 22
    Hostname github.com
 
    IdentityFile "y:\home\.ssh\id_rsa_user2"
 
    TCPKeepAlive yes
    IdentitiesOnly yes
    </pre>
<p></p>
<h1>week_5</h1>
<p>第五周教學影片及內容</p>
<p>加入相關內容:<span>導入 Ungit、利用<a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%BA%8C.html"><span> </span>kungit.bat</a><span><span> </span>在倉儲目錄中啟用 ungit、自製可攜系統、納入 <a href="https://getsharex.com/">ShareX</a><span><span> </span>的可攜系統、建立 <a href="https://www.blogger.com/">Blogger</a><span><span> </span>網誌、建立 Github 倉儲、建立 <a href="https://pages.github.com/">Github Pages</a><span><span> </span>網站、利用 <a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a><span><span> </span>以及<span> </span></span><a href="https://pages.github.com/">Github Pages</a><span><span> </span>建立網際內容管理系統、以 ssh 連線對 Github 倉儲改版、加入 y:\home\.ssh\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料以及IPv6 環境設定與 Git 操作設定。</span></span></span></span></span></span></p>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span></p>
<h2>導入 Ungit</h2>
<p><br/><br/><span>說明自 2019 Spring 開始, 可以利用<span> </span></span><a href="https://github.com/FredrikNoren/ungit">ungit</a><span><span> </span>簡化近端 Git 指令的使用, 透過網際圖形化介面, 讓使用者進行分散式內容版次管理.<span> </span></span><br/><br/><span>說明如何利用<span> </span></span><a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a><span><span> </span>以動態模式在近端改版後, 將資料轉為靜態網頁後, 新增提交推送到遠端對應倉儲, 詳細說明請參閱下列影片:</span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lB-spECfhr8" width="560"></iframe><span><span> </span></span></p>
<p><br/>利用<a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%BA%8C.html"><span> </span>kungit.bat</a><span><span> </span>在倉儲目錄中啟用 ungit</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1O0WgN7Y3zI" width="560"></iframe><span><span> </span></span></p>
<h2>自製可攜系統</h2>
<p><span>以下影片則說明如何自行建立可攜程式系統, 包括從<span> </span></span><a href="https://www.python.org/">Python</a><span><span> </span>下載, 安裝, 複製到隨身碟, 移除系統安裝, 然後進行命令搜尋設定等相關技術, 所完成的可攜隨身系統可以解譯流程執行 Python 3 與 ANSI C 程式:</span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/uEq_GtkkPx8" width="560"></iframe></p>
<p><br/>納入<span> </span><a href="https://getsharex.com/">ShareX</a><span><span> </span>的可攜系統:</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0jqiC_rFDnc" width="560"></iframe><span><span> </span></span><br/><span><br/></span><span></span></p>
<p><br/>建立<span> </span><a href="https://www.blogger.com/">Blogger</a><span> </span>網誌</p>
<p><span>本學期除了繼續使用<span> </span></span><a href="https://blog.getpelican.com/">Pelican</a><span><span> </span>網誌系統外, 還導入動態的<span> </span></span><a href="https://www.blogger.com/">Google Blogger</a><span><span> </span>網誌, 以下影片說明如何登入 Google 帳號後, 建立客製化的 Blogger 系統:</span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5qVUy-b_ZzA" width="560"></iframe><br/><br/><span>機械設計工程系網誌: </span><a href="https://mde2019.blogspot.com/">https://mde2019.blogspot.com/ </a><br/><br/><span>精密機械工程科網誌: </span><a href="https://pmenfu.blogspot.com/">https://pmenfu.blogspot.com/</a><br/><span><br/></span><span></span></p>
<h2>建立 Github 倉儲</h2>
<p><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lPJGzHdpIOw" width="560"></iframe><br/><br/><span><br/></span><span></span></p>
<p><br/>建立<span> </span><a href="https://pages.github.com/">Github Pages</a><span> </span>網站</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RFVWE1i4Cew" width="560"></iframe></p>
<p><br/>利用<span> </span><a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a><span><span> </span>以及<span> </span></span><a href="https://pages.github.com/">Github Pages</a><span><span> </span>建立網際內容管理系統:</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Qhfqbvj_HcE" width="560"></iframe><span><span> </span></span><span><br/></span><span></span></p>
<h2>以 ssh 連線對 Github 倉儲改版</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/t4PslV5Abjs" width="560"></iframe><span><span> </span></span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wlShI_2oMKE" width="560"></iframe><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZE5FkCWSi58" width="560"></iframe><span><span> </span></span></p>
<h2>加入設定, 讓 ssh 連線透過 Proxy Server 擷取資料</h2>
<p><span>加入 y:\home\.ssh\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料:</span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/qZkmoeZHT1E" width="560"></iframe><span><span> </span></span><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Tmgwrtv0wI0" width="560"></iframe><span><span> </span></span><span><br/></span></p>
<h2>IPv6 環境設定與 Git 操作設定</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/M8RF-dPXzHs" width="560"></iframe></p>
<h1>week_8</h1>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span></p>
<h3>電腦初學者的網際內容管理</h3>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content" id="post-body-8100707464249811474" itemprop="description articleBody"><span style="color: #000000; background-color: #00ff00;">第一步</span><br/><span><br/></span><span>網路連線設定</span><br/><br/>了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定.<br/><br/>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定.<br/><br/><span>瀏覽器代理主機設定</span><br/><br/>了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定.<br/><br/><span>申請 Github 帳號</span><br/><br/>利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲.<br/><br/><span style="background-color: #00ff00; color: #000000;">第二步</span><br/><br/><span>配置可攜程式環境</span><br/><br/>取得 Windows 10 64 位元環境下的可攜程式環境 (<a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79">下載  2019_cdb_w5.7z</a>), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.<br/><br/>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出.<br/><br/>了解基本的 DOS (Disk Operating System) 指令<br/><br/>C:\&gt; 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為<br/><br/>Y:\&gt;<br/><br/>若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如:<br/><br/>Y:\&gt;cd tmp<br/><br/>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是<br/><br/>Y:\tmp&gt;<br/><br/>若要再回到 Y 槽的根目錄, 可以使用 cd ..<br/><br/>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.<br/><br/>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \<br/><br/>直接回到根目錄.<br/><br/>或者從 Y:\&gt; 直接使用<br/><br/>cd \tmp\repo\ssh\wcm2019<br/><br/>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;<br/><br/>此外, 常用的 DOS 指令有:<br/><br/>dir - 列出目前所在目錄的內容<br/><br/>mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄<br/><br/>cls - clear screen, 清除目前的命令列顯示的內容<br/><br/><span style="color: #000000; background-color: #00ff00;">第三步</span><br/><br/><span>建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版</span><br/><span><br/></span>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令.<br/><br/>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.<br/><br/>另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.<br/><br/><span>git add</span><br/><br/>git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.<br/><br/>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:<br/><br/>
<blockquote class="tr_bq">git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add</blockquote>
<br/><span>git commit </span><br/><br/>git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.<br/><br/>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.<br/><br/><span>git push</span><br/><br/>git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.<br/><br/><span style="color: #000000; background-color: #00ff00;">第四步</span><br/><span><br/></span><span>自行建立靜態內容管理網站</span><br/><br/>利用 CMSimfly (<a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a>) 內容, 建立自己的<span> </span><a href="https://pages.github.com/">Github Pages</a><span> </span>網站<br/><br/><span style="color: #000000; background-color: #00ff00;">第五步</span><br/><span><br/></span><span>管理網站內容</span><br/><br/>學習如何使用 CMSimfly, 在網站中加入各種內容<br/><br/><span style="color: #000000; background-color: #00ff00;">第六步</span><br/><span><br/></span><span>使用 Flask, bs4 與 lxml 模組</span><br/><br/>了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統</div>
<div class="post-body entry-content" itemprop="description articleBody"></div>
<p><br/><strong><strong>進階內容<strong></strong><br/><br/><span style="color: #000000; background-color: #00ff00;">第七步</span><br/><span><br/></span><span>虛擬主機下的類 Github 網站</span><br/><br/>如何利用<span> </span><a href="https://www.fossil-scm.org/">Fossil SCM</a>, 在<span> </span><a href="https://www.virtualbox.org/">Virtualbox</a><span> </span>中的<span> </span><a href="https://drive.google.com/open?id=1yjWQ5e6AGaio2ZvclONKEwIfSMtY2gSz">Ubuntu 18.04-2</a> (8.5 GB) 建立類似 Github 的系統, 可以放入 CMSimfly 的靜態網頁<br/><br/><span style="color: #000000; background-color: #00ff00;">第八步</span><br/><span><br/></span><span>實體主機下的網際內容管理</span><br/><br/>如何在實體主機上安裝<span> </span><a href="https://www.ubuntu.com/">Ubuntu</a><span> </span>18.04 (<a href="https://www.ubuntu.com/about/release-cycle">https://www.ubuntu.com/about/release-cycle</a>), 配置網路連線, 然後架構<span> </span><a href="https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html">uwsgi</a><span> </span>環境下的 CMSimfly 動態網站, 或建立 Fossil SCM 用來伺服管理 CMSimfly 下有版次管理的靜態網頁, 或利用<span> </span><a href="https://nginx.org/en/">nginx</a><span> </span>伺服無版次管理的 CMSimfly 靜態網頁.</strong></strong></p>
<h1>week_10</h1>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span></p>
<h2>Virtualbox 虛擬主機的網路設定</h2>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content" id="post-body-3542992953483152816" itemprop="description articleBody"><strong><span style="background-color: #00ccff; color: #000000;">Virtualbox 兩層次設定</span></strong><br/><br/>Virtualbox File 下拉式功能表下的 Preferences 屬於全系統的偏好設定, 而與各虛擬主機對應的 Settings 則僅與該對應的虛擬主機有關.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Virtualbox 虛擬主機網路設定</span></strong><br/><br/>參考:<br/><br/><a href="https://www.virtualbox.org/manual/ch06.html">https://www.virtualbox.org/manual/ch06.html</a><br/><br/><a href="https://technology.amis.nl/2018/07/27/virtualbox-networking-explained/">https://technology.amis.nl/2018/07/27/virtualbox-networking-explained/</a><br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Not Attached</span></strong><br/><br/>當使用者需要模擬虛擬主機的網路卡連接線被拔除的情況時, 可將該虛擬主機的網路卡以 Not Attached 模式設定.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">NAT</span></strong><br/><span><br/></span><span>當使用者只需要讓虛擬主機能夠上網, 下載檔案或登入電子郵箱時, 可以將虛擬主機的網路卡以 NAT 模式設定. 在 NAT 模式下, 只有 ping 能夠運作, tracert 與其他與 ICMP 、VPN 或 PPTP 等協定對應的功能都將會失效.</span><br/><br/><strong><span style="color: #000000; background-color: #00ccff;">NAT  Network</span></strong><br/><br/>NAT Network 與 NAT 類似, 但使用者可以透過 File-Preferences-Network 新增多個 NAT Network, 並選擇所要使用的網段與 DHCP 或是否支援 IPv6 等設定.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Bridged Adapter</span></strong><br/><span><br/></span><span>當使用者需要利用虛擬主機建立與 Host 位階相同的網路模式時, 可以將虛擬主機的網卡設訂為 Bridged Adapter.</span><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Internal Network</span></strong><br/><br/>當使用者需要讓虛擬主機設定為 <a href="https://en.wikipedia.org/wiki/Software-defined_networking">https://en.wikipedia.org/wiki/Software-defined_networking</a> 時, 可以將網路卡設為可透過軟體調控的網路模式.<br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Host-only Adapter</span></strong><br/><span><br/></span><span>當使用者只需要讓虛擬主機與 Host 電腦連線時, 可以將網卡設為 Host-only Adapter, 此一模式的使用時機可以在虛擬主機中配置 WWW 伺服器、應用程式伺服器、Fossil SCM 伺服器, 然後透過 Host 上的瀏覽器進行連線測試, 或者在虛擬主機上安裝特定軟體套件的認證主機, 以便讓 Host 中的軟體套件透過虛擬主機執行授權認證.</span><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">參考 vdi:</span></strong><br/><br/>位於雲端的<span> </span><a href="https://drive.google.com/file/d/1bSBdEPVn6IG22cVLpTbY97JY16vjlatz/view?usp=sharing">Ubuntu 18.04_201904.vdi</a><span> </span>(約 9 GB) - 已經配置 Fossil SCM: https 5443, Host-only: 192.168.56.2, https: 443 and 8843 for CMSimfly, Squid Proxy Server.<br/><br/>假如要利用 USB 隨身碟存放上述約 9 GB 的 Ubuntu 18.04 vdi 檔案, 必須將隨身碟格式化為 NTFS, 若採 Fat32 格式, 最大單一檔案必須小於 4 GB.<br/><br/>另外在近端有一類似的檔案, 可提供上課學員下載:<br/><br/><a href="http://wcmg1.kmol.info:88/ub1804_nox.vdi">http://wcmg1.kmol.info:88/ub1804_nox.vdi</a><span> </span>(僅限近端用戶使用 IPv6 協定者下載)<br/><br/><strong><span style="background-color: #00ccff; color: #000000;">參考網際應用程式:</span></strong><br/><br/><a href="https://github.com/mdecourse/wcms-scrum1">https://github.com/mdecourse/wcms-scrum1</a><br/><br/><a href="http://mde.tw/2017springcd/blog/brython-spur-gears.html">http://mde.tw/2017springcd/blog/brython-spur-gears.html</a><br/><br/><a href="https://github.com/mdecourse/cd2018/issues/33">https://github.com/mdecourse/cd2018/issues/33</a><br/><br/><a href="https://github.com/looooo/freecad.gears">https://github.com/looooo/freecad.gears</a><br/><br/><a href="https://forum.freecadweb.org/viewtopic.php?t=27566">https://forum.freecadweb.org/viewtopic.php?t=27566</a><br/><br/><a href="https://www.freecadweb.org/wiki/Scripting_examples">https://www.freecadweb.org/wiki/Scripting_examples</a><br/><br/><a href="https://github.com/mdecourse/WebCADViewer">https://github.com/mdecourse/WebCADViewer</a><br/><br/><a href="https://github.com/JMG1/ExplodedAssembly">https://github.com/JMG1/ExplodedAssembly</a><br/><br/><a href="https://github.com/shaise/FreeCAD_SheetMetal">https://github.com/shaise/FreeCAD_SheetMetal</a><br/><br/><a href="https://github.com/jmplonka/InventorLoader">https://github.com/jmplonka/InventorLoader</a><br/><br/><a href="https://github.com/jptned/3DGuitar">https://github.com/jptned/3DGuitar</a><br/><br/><a href="https://framagit.org/FrViPofm/Bike3D">https://framagit.org/FrViPofm/Bike3D</a><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Ubuntu 18.04 虛擬主機網路連線設定</span></strong><br/><br/>設定檔案 /etc/netplan/50-cloud-init.yaml<br/><br/>修改後, 以<br/><br/>    sudo netplan apply<br/><br/>讓設定生效.<br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Ubuntu 18.04 Service 管理</span></strong><br/><br/><a href="https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485048985">https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485048985</a><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">CMSimfly 透過 uwsgi 在 Ubuntu 18.04 以 service 啟動</span></strong><br/><br/><a href="https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485080368">https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485080368</a><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Ubuntu 18.04 apt proxy 設定</span></strong><br/><br/>安裝 Ubuntu 18.04-2 過程中所輸入的 proxy server, 將存入 /etc/apt/apt.conf.d/90curtin-aptproxy 檔案中, 這與之前使用 /etc/apt/apt.conf 的設定不同.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Virtualbox 虛擬主機與實體操作系統間的雙向轉換</span></strong><br/><br/><a href="https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485101887">https://github.com/mdecourse/cadp2018/issues/16#issuecomment-485101887</a></div>
<h1>week_12</h1>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span></p>
<h2>網管課程任務</h2>
<p><strong><span style="color: #ff0000;">期末報告類別</span></strong><br/><br/><span>2019 年 Spring 的網際內容管理課程已經到了最後執行分組期末報告的階段, 總共可以分為兩個大類:</span></p>
<ol>
<li><strong><span style="background-color: #ffcc99; color: #000000;">持續強化網際內容與系統的可用性</span></strong></li>
<li><strong><span style="background-color: #ffcc99; color: #000000;">深入了解網際內容管理系統的配置環境</span></strong><strong><span style="background-color: #ffcc99; color: #000000;"></span></strong></li>
</ol>
<p><strong><span style="color: #ff0000;">持續強化網際內容與系統的可用性</span></strong><br/><br/><span>此類期末報告的任務, 在將更多適合機械設計與精密機械工程使用的 Javascript 導向內容, 放入 CMSimfly, 並且讓各種裝置都能順利閱讀.</span><br/><br/><span>此任務目前已經將 Bootstrap 前端框架配置到 CMSimfly, 其倉儲位於:</span><br/><br/><a href="https://github.com/scrum-1/wcm2019">https://github.com/scrum-1/wcm2019</a><br/><br/><span>網頁則位於:</span><br/><br/><a href="http://cpgx.kmol.info/wcm2019">http://cpgx.kmol.info/wcm2019</a><br/><br/><span>在此一類別所能進行的期末報告, 可以透過組員的協同, 將</span><br/><br/></p>
<div><a href="https://github.com/BlackrockDigital">https://github.com/BlackrockDigital</a></div>
<div>與</div>
<div><a href="https://themewagon.com/theme_tag/bootstrap-4-templates/">https://themewagon.com/theme_tag/bootstrap-4-templates/</a></div>
<div>各式 Template 導入 CMSimfly, 讓未來的使用者可以根據不同環境需求, 選擇不同的靜態網頁模板.</div>
<p><span>至於內容的強化則可根據</span><a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%B8%89.html">實習任務三</a><span>的引導, 將更多設想中的動態 Javascript 模擬或遊戲內容, 放入各組的 CMSimfly 網站中.</span><br/><br/><strong><span style="color: #ff0000;">深入了解網際內容管理系統的配置環境</span></strong></p>
<div></div>
<div>此類期末報告的任務, 在利用 Virtualbox 中的 Ubuntu 操作系統, 配置一套可以動態啟動的虛擬網際內容管理系統, 並學習如何在虛擬操作系統與實體操作系統中配置 CMSimfly 網際內容管理系統. 相關規劃可以參考: <a href="https://2019wcm.blogspot.com/2019/04/virtualbox.html">https://2019wcm.blogspot.com/2019/04/virtualbox.html</a></div>
<h2>網際內容管理課程回顧</h2>
<p><span style="background-color: #ffff99; color: #000000;">2019 Spring 網際內容管理課程</span><br/><br/><strong><span style="color: #0000ff;">五專部</span></strong><br/><br/><strong><span style="color: #ff0000;">1. 是否已經在自己的隨身碟建立隨身程式系統?</span></strong><br/><br/><span>此一隨身系統以</span><a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79"><span> </span>2019_cdb_w5.7z</a><span><span> </span>為基礎, 使用者必須會自行查驗</span><br/><br/><span>    是否已經將 portablegit 中的 helper = manager 的設定移除?</span><br/><span>     python 是否已經安裝 flask, bs4 與 lxml 模組?</span><br/><span>    (1)是否了解 git 以 https 連線時, proxy 將採用那一個檔案中的設定?</span><br/><span>    (2)是否已經學會如何採用 ssh 模式維護 github 上的倉儲?</span><br/><span>    (3)是否了解 CMSimfly 動態與靜態系統之間的關係?</span><br/><span>    (4)是否會在 CMSimfly 中上傳檔案, 引用檔案?</span><br/><span>    (5)是否會在 CMsimfly 中上傳圖檔, 引用圖檔?</span><br/><span>    (6)是否會在 CMSimfly 中嵌入 Youtube 影片?</span><br/><span>    (7)是否會在 CMSimfly 頁面中加入 Javascript 互動程式?</span><br/><span>    (8)是否會更改 CMsimfly 靜態系統所使用的模板?</span><br/><span>    (9)是否能將 USB 隨身碟格式為 NTFS 或 extFAT, 以便放入 Ubuntu 虛擬主機檔案?</span><br/><span>    (10)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 Fossil SCM 來伺服靜態 CMSimfly 檔案?</span><br/><span>    (11)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 uwsgi 來伺服動態 CMSimfly 系統?</span><br/><br/><strong><span style="color: #ff0000;">2. 是否已經根據各上述階段任務的操作拍成說明影片, 嵌入自己的 Github Pages 網站?</span></strong><br/><br/><strong><span style="color: #ff0000;">3. 是否已經著手執行各學員的期末專案, 是否了解各學員的期末報告, 必須同時呈現 html 與 pdf 版本.</span></strong><br/><br/><span>各學員繳交供評分之內容: 個人倉儲 Github Pages 網站及 pdf 格式之期末報告.</span></p>
<h1>期末影片</h1>
<p><span>網際內容管理課程</span><br/><br/><span>評分比例:</span><br/><br/><span>    學員出席 (20%)</span><br/><br/><span>    電腦組裝與操作系統安裝 (10%) - 以 Virtualbox 虛擬主機配置與設定取代實體安裝</span><br/><br/><span>    網路連線配置與設定  (10%)</span><br/><br/><span>    Github 倉儲與 CMSimfly 配置 (30%)</span><br/><br/><span>    CMSimfly 操作 (20%)</span><br/><br/><span>    CMSimfly 開發 (10%)</span><br/><br/><span>評分方式:</span><br/><br/><span>    WCM 每週自評與互評表單:<span> </span></span><a href="https://goo.gl/forms/gExeWw3JIrenXi453">https://goo.gl/forms/gExeWw3JIrenXi453</a><br/><br/><span>    學員自我評量 (30%)</span><br/><br/><span>    分組自我評量 (30%)</span><br/><br/><span>    倉儲歷程查驗 (40%)</span></p><h1>救救台灣</h1>
<p>★跟著館長一起深蹲★</p>
<p><img alt="" height="326" src="/images/maxresdefault.jpg" width="579"/></p>
<h2>協議不能重談</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="534" src="https://www.youtube.com/embed/2HxvN1Do0ZA" width="949"></iframe></p>
<h2>不只媽祖託夢　郭台銘真正決定選總統的那一刻</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="534" src="https://www.youtube.com/embed/Mx7C9OqNPRU" width="949"></iframe></p>
<h2>用高品質的「台灣製造」取代「中國製造」</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="534" src="https://www.youtube.com/embed/r1VHIoWSM-M" width="949"></iframe></p>
<h2>等敵軍走進陣地再來談</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="534" src="https://www.youtube.com/embed/o4WdskqBjNg" width="949"></iframe></p>